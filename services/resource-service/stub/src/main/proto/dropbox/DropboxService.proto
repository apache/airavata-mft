/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.airavata.mft.resource.service.dropbox;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "dropbox/DropboxResource.proto";
import "dropbox/DropboxStorage.proto";

service DropboxService {

    // Storage

    rpc getDropboxStorage (org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageGetRequest) returns
                                                    (org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage) {
        option (google.api.http) = {
           get: "/v1.0/resource/dropbox/storage"
        };
    }

    rpc createDropboxStorage (org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageCreateRequest) returns
                                                    (org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorage) {
        option (google.api.http) = {
           post: "/v1.0/resource/dropbox/storage"
        };
    }

    rpc updateDropboxStorage (org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageUpdateRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
           put: "/v1.0/resource/dropbox/storage"
        };
    }

    rpc deleteDropboxStorage (org.apache.airavata.mft.resource.stubs.dropbox.storage.DropboxStorageDeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
           delete: "/v1.0/resource/dropbox/storage"
        };
    }

    // Resource

    rpc getDropboxResource (org.apache.airavata.mft.resource.stubs.dropbox.resource.DropboxResourceGetRequest) returns
                                            (org.apache.airavata.mft.resource.stubs.dropbox.resource.DropboxResource) {
        option (google.api.http) = {
            get: "/v1.0/resource/dropbox"
        };
    }

    rpc createDropboxResource (org.apache.airavata.mft.resource.stubs.dropbox.resource.DropboxResourceCreateRequest) returns
                                            (org.apache.airavata.mft.resource.stubs.dropbox.resource.DropboxResource) {
        option (google.api.http) = {
            post: "/v1.0/resource/dropbox"
        };
    }

    rpc updateDropboxResource (org.apache.airavata.mft.resource.stubs.dropbox.resource.DropboxResourceUpdateRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1.0/resource/dropbox"
        };
    }

    rpc deleteDropboxResource (org.apache.airavata.mft.resource.stubs.dropbox.resource.DropboxResourceDeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1.0/resource/dropbox"
        };
    }
}