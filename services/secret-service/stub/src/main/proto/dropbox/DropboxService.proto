/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.airavata.mft.credential.service.dropbox;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "dropbox/DropboxCredential.proto";

service DropboxSecretService {
    rpc getDropboxSecret (org.apache.airavata.mft.credential.stubs.dropbox.DropboxSecretGetRequest) returns
                                                    (org.apache.airavata.mft.credential.stubs.dropbox.DropboxSecret) {
        option (google.api.http) = {
            get: "/v1.0/secret/dropbox"
        };
    }

    rpc createDropboxSecret (org.apache.airavata.mft.credential.stubs.dropbox.DropboxSecretCreateRequest) returns
                                                    (org.apache.airavata.mft.credential.stubs.dropbox.DropboxSecret) {
        option (google.api.http) = {
            post: "/v1.0/secret/dropbox"
        };
    }

    rpc updateDropboxSecret (org.apache.airavata.mft.credential.stubs.dropbox.DropboxSecretUpdateRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1.0/secret/dropbox"
        };
    }

    rpc deleteDropboxSecret (org.apache.airavata.mft.credential.stubs.dropbox.DropboxSecretDeleteRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1.0/secret/dropbox"
        };
    }
}
